<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>saic.research.microservice</groupId>
	<artifactId>webservice1</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>SAIC_Research_MICROSERVICE</name>
	<description>Saic Research Web service Microservice</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<spring-cloud.version>Finchley.RELEASE</spring-cloud.version>
		<cucumber-version>1.2.5</cucumber-version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-batch</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
		</dependency>
		<dependency>
		  <groupId>org.springframework.boot</groupId>
		  <artifactId>spring-boot-starter</artifactId>
		  	<exclusions>
		    	<exclusion>
			      <groupId>org.springframework.boot</groupId>
			      <artifactId>spring-boot-starter-logging</artifactId>
		    	</exclusion>
		  	</exclusions>
		</dependency>
	    <dependency>
	      <groupId>org.springframework.boot</groupId>
	      <artifactId>spring-boot-starter-log4j2</artifactId>
	    </dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core -->
		<dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-core</artifactId>
		    <version>2.16.0</version>
		</dependency>

	    <dependency>
	        <groupId>org.apache.logging.log4j</groupId>
	        <artifactId>log4j-api</artifactId>
	        <version>2.11.1</version>
	    </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-integration</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jersey</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web-services</artifactId>
		</dependency>
		<dependency>
		    <groupId>io.fabric8</groupId>
		    <artifactId>docker-maven-plugin</artifactId>
		    <version>0.26.1</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- <dependency>
			<groupId>org.springframewsork.batch</groupId>
			<artifactId>spring-batch-test</artifactId>
			<scope>test</scope>
		</dependency> -->
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>
<!-- https://mvnrepository.com/artifact/com.openpojo/openpojo -->
		<dependency>
		    <groupId>com.openpojo</groupId>
		    <artifactId>openpojo</artifactId>
		    <version>0.8.3</version>
		    <scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		
		<!--  Oracle -->
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.tomcat</groupId>
                    <artifactId>tomcat-jdbc</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
		
		
		<!--  
		<dependency>
		    <groupId>com.oracle</groupId>
		    <artifactId>ojdbc7</artifactId>
            <version>12.1.0</version>
		</dependency>
		
		
		<dependency>
		    <groupId>gov.fmcsa.safer.utils</groupId>
			  <artifactId>safer-common</artifactId>
			  <version>1.0</version>
		</dependency>
		
		-->
		
		<dependency>
		    <groupId>com.oracle</groupId>
		    <artifactId>ojdbc7</artifactId>
            <version>12.1.0</version>
		</dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-dbcp2</artifactId>
            </dependency>

        <dependency>
		    <groupId>com.zaxxer</groupId>
		    <artifactId>HikariCP</artifactId>
		    </dependency>
     
		<!--  End Oracle  -->
		
		<!--  Legacy t18 file processing -->
		
		<dependency>
		    <groupId>xerces</groupId>
		    <artifactId>xercesImpl</artifactId>
		    <version>2.12.0</version>
		</dependency>
		
		<dependency>
		    <groupId>org.w3c</groupId>
		    <artifactId>dom</artifactId>
		    <version>2.3.0-jaxb-1.0.6</version>
		</dependency>
		
		<dependency>
	    <groupId>com.fasterxml.jackson.datatype</groupId>
	    <artifactId>jackson-datatype-jdk8</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>com.fasterxml.jackson.datatype</groupId>
		    <artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		
		<!--  End Legacy t18 file processing -->
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		 <!-- Cucumber-->
		<dependency>
		    <groupId>info.cukes</groupId>
		    <artifactId>cucumber-java</artifactId>
		    <version>${cucumber-version}</version>
		    <scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>info.cukes</groupId>
		    <artifactId>cucumber-junit</artifactId>
		    <version>${cucumber-version}</version>
		    <scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>info.cukes</groupId>
		    <artifactId>cucumber-spring</artifactId>
		    <version>${cucumber-version}</version>
		    <scope>test</scope>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
				    <includeSystemScope>true</includeSystemScope>
				  </configuration>
			</plugin>
			<plugin>
			    <groupId>org.jacoco</groupId>
			    <artifactId>jacoco-maven-plugin</artifactId>
			    <version>0.8.2</version>
                <executions>
                    <!--
                        Prepares the property pointing to the JaCoCo runtime agent which
                        is passed as VM argument when Maven the Surefire plugin is executed.
                    -->
                    <execution>
                        <id>pre-unit-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
              	            <excludes>
			            		<exclude>**/Docs/*</exclude>
			        		</excludes>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <destFile>${jacoco.ut.execution.data.file}</destFile>
                            <!--
                                Sets the name of the property containing the settings
                                for JaCoCo runtime agent.
                            -->
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>
                    <!--
                        Ensures that the code coverage report for unit tests is created after
                        unit tests have been run.
                    -->
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <excludes>
			            		<exclude>**/Docs/*</exclude>
			        		</excludes>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <dataFile>${jacoco.ut.execution.data.file}</dataFile>
                            <!-- Sets the output directory for the code coverage report. -->
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                        </configuration>
                    </execution>
                    <!--
                        Prepares the property pointing to the JaCoCo runtime agent which
                        is passed as VM argument when Maven the Failsafe plugin is executed.
                    -->
                    <execution>
                        <id>pre-integration-test</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <destFile>${jacoco.it.execution.data.file}</destFile>
                            <!--
                                Sets the name of the property containing the settings
                                for JaCoCo runtime agent.
                            -->
                            <excludes>
			            		<exclude>**/Docs/*</exclude>
			        		</excludes>
                            <propertyName>failsafeArgLine</propertyName>
                        </configuration>
                    </execution>
                    <!--
                        Ensures that the code coverage report for integration tests after
                        integration tests have been run.
                    -->
                    <execution>
                        <id>post-integration-test</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                        	<excludes>
			            		<exclude>**/Docs/*</exclude>
			        		</excludes>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <dataFile>${jacoco.it.execution.data.file}</dataFile>
                            <!-- Sets the output directory for the code coverage report. -->
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
			<!-- Used for unit tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.15</version>
                <configuration>
                    <!-- Sets the VM argument line used when unit tests are run. -->
                    <argLine>${surefireArgLine}</argLine>
                    <!-- Skips unit tests if the value of skip.unit.tests property is true -->
                    <skipTests>${skip.unit.tests}</skipTests>
                    <!-- Excludes integration tests when unit tests are run. -->
                    <excludes>
                        <exclude>**/IT*.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
                     
            <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-failsafe-plugin</artifactId>
		        <configuration>
			        <includes>
			            <include>**/*IT.java</include>
			        </includes>
			    </configuration>
			    <executions>
			        <execution>
			            <id>failsafe-integration-tests</id>
			            <phase>integration-test</phase>
			            <goals>
			                <goal>integration-test</goal>
			            </goals>
			        </execution>
			    </executions>
      		</plugin>
		</plugins>
	    <resources>
	        <resource>
	            <directory>src/main/resources</directory>
	            <filtering>true</filtering>
	        </resource>
	    </resources>
	</build>
	<profiles>
		<profile>
			<id>docker</id>
			<build>
				<plugins>
					<plugin>
						  <groupId>io.fabric8</groupId>
						  <artifactId>docker-maven-plugin</artifactId>
						  <version>0.26.1</version>
						  <configuration>
						     
						     <images>
						        <!-- A single's image configuration -->
						        <image>
						           <name>safer-persist-service</name>
						           <build>
							         <dockerFileDir>${basedir}</dockerFileDir>
							       </build>
							       <run>
									<ports>
										<port>8092:8092</port>
									</ports>
								     <env>
									  <ENVIRONMENT>${activatedProperties}</ENVIRONMENT>
									</env>		
							       </run>
						        </image>
						     </images>
						     
						  </configuration>
						
						  <!-- Connect start/stop to pre- and
						       post-integration-test phase, respectively if you want to start
						       your docker containers during integration tests -->
						  <executions>
						    <execution>
						       <id>docker:build</id>
						       <phase>package</phase>
						       <goals>
						         <!-- "build" should be used to create the images with the
						              artifact -->
						         <goal>build</goal>
						       </goals>
						    </execution>
						    <execution>
						       <id>doker:start</id>
						       <phase>install</phase>
						       <goals>
						         <goal>start</goal>
						         <goal>logs</goal>
						      </goals>
						    </execution>
						  </executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		
		<profile>
		    <id>dev</id>
		    <properties>
		        <activatedProperties>dev</activatedProperties>
		    </properties>
		    <activation>
		        <activeByDefault>true</activeByDefault>
		    </activation>
		</profile>
		<profile>
		    <id>local</id>
		    <properties>
		        <activatedProperties>local</activatedProperties>
		    </properties>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
</project>
